function QuaternionCalculator
%QuatGUI Graphical user interface for manupulating quaternions
%
    clc; close all; clear all;
    
    % Window variables
    fWidth = 28;
    fHeight = 18;
    
    pWidth = fWidth - 0.4;
    pHeight = 4;
    
    btnFontSize = 10;
    btnHeight = 1;
    entryHeight = .8;
    
    qStrBottom = pHeight - 1;
    
    % Create Main Window
    hFig = figure;
    set(hFig,...
        'Units', 'centimeters',...
        'Position', [2 2 fWidth fHeight],...
        'Visible', 'on',...
        'Resize', 'off' ,...
        'MenuBar', 'none' ,...
        'ToolBar', 'none' ...
        );
    
    % Title
    hTitle = uicontrol;
    set(hTitle,...
        'Parent', hFig,...
        'Units', 'centimeters',...
        'Position', [0 fHeight-1.5 fWidth 1],...
        'Style', 'Text',...
        'String', 'Quaternion Calculator',...
        'FontSize', 18 ...
        );
    
    % ---------- Quaternion 1 entry panel ----------- %
    
    % Main Panel
    qPanel1 = uipanel;
    set(qPanel1, ...
        'Parent', hFig,...
        'Units', 'centimeters',...
        'Position', [.2 fHeight-5.7 pWidth pHeight],...
        'BorderType', 'line' ...
        );
    
    % Hidden Axes for text
    qTextAxes1 = axes;
    set(qTextAxes1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [0 0 pWidth pHeight], ...
        'XLim', [0 pWidth],...
        'YLim', [0 pHeight],...
        'Visible', 'off' ...
        );
    
    % Title
    qTitle1 = uicontrol;
    set(qTitle1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [.4 pHeight-1.05 1 .5],...
        'Style', 'Text',...
        'String', 'Q1:',...
        'FontSize', 14 ...
        );
    
    % Q1.s
    qW1 = uicontrol;
    set(qW1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [2 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit', ...
        'FontSize', 12 ,...
        'String', '0' ,...
        'Callback', @quatEdit_Callback ...
        );
    
    % Q1.v(1)
    qX1 = uicontrol;
    set(qX1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [7.5 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit', ...
        'FontSize', 12 ,...
        'String', '0' ,...
        'Callback', @quatEdit_Callback ...
        );
    
    %Q1.v(2)
    qY1 = uicontrol;
    set(qY1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [13 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit', ...
        'FontSize', 12 ,...
        'String', '0' ,...
        'Callback', @quatEdit_Callback ...
        );
    
    % Q1.v(30
    qZ1 = uicontrol;
    set(qZ1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [18.5 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit', ...
        'FontSize', 12 ,...
        'String', '0' ,...
        'Callback', @quatEdit_Callback ...
        );
    
    % Clear entry fields
    qClearBtn1 = uicontrol;
    set(qClearBtn1,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [23.5 pHeight-1.45 3 1], ...
        'String', 'Clear', ...
        'FontSize', btnFontSize ,...
        'Callback', @clearBtn_Callback ...
        );
    
    % Button to display Euler figure window
    qEulerBtn = uicontrol;
    set(qEulerBtn,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [pWidth/3-3 .75 4 1], ...
        'String', 'Euler Angles', ...
        'FontSize', btnFontSize ,...
        'Callback', @euler_Callback ...
        );
    
    % Button to display Rotation Matrix figure window
    qRotMatrixBtn = uicontrol;
    set(qRotMatrixBtn,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [pWidth*2/3-1 .75 4 1], ...
        'String', 'Rotation Matrix', ...
        'FontSize', btnFontSize ,...
        'Callback', @rotMatrix_Callback ...
        );
    
    % Button to display axis-angle figure window
    qAxisAngleBtn = uicontrol;
    set(qAxisAngleBtn,...
        'Parent', qPanel1,...
        'Units', 'centimeters',...
        'Position', [pWidth/2-2 .75 4 1], ...
        'String', 'Axis-Angle', ...
        'FontSize', btnFontSize ,...
        'Callback', @axisAngle_Callback ...
        );
    
    % Quaternion1 +/- text
    axes(qTextAxes1);
    text(6, qStrBottom, '$  + $','FontSize', 16, 'Interpreter', 'latex');
    text(10.8, qStrBottom, '$i \quad +$','FontSize', 16, 'Interpreter', 'latex');
    text(16.2, qStrBottom, '$j \quad +$','FontSize', 16, 'Interpreter', 'latex');
    text(21.7, qStrBottom, '$k$','FontSize', 16, 'Interpreter', 'latex');
    
    % ------- Quaternion 2 entry panel ------- %
    
    % Main Panel
    qPanel2 = uipanel;
    set(qPanel2, ...
        'Parent', hFig,...
        'Units', 'centimeters',...
        'Position', [.2 3 pWidth pHeight],...
        'BorderType', 'line' ...
        );
    
    % Hidden Axes for text
    qTextAxes2 = axes;
    set(qTextAxes2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [0 0 pWidth pHeight], ...
        'XLim', [0 pWidth],...
        'YLim', [0 pHeight],...
        'Visible', 'off' ...
        );
    
    % Title
    qTitle2 = uicontrol;
    set(qTitle2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [.4 pHeight-1.05 1 .5],...
        'Style', 'Text',...
        'String', 'Q2:',...
        'FontSize', 14 ...
        );
    
    % Q2.s
    qW2 = uicontrol;
    set(qW2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [2 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit',...
        'FontSize', 12 ,...
        'String', '0' ...
        );
    
    % Q2.v(1)
    qX2 = uicontrol;
    set(qX2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [7.5 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit' ,...
        'FontSize', 12 ,...
        'String', '0' ...
        );
    
    % Q2.v(2)
    qY2 = uicontrol;
    set(qY2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [13 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit' ,...
        'FontSize', 12 ,...
        'String', '0' ...
        );
    
    % Q2.v(3)
    qZ2 = uicontrol;
    set(qZ2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [18.5 pHeight-1.35 3 entryHeight],...
        'Style', 'Edit' ,...
        'FontSize', 12 ,...
        'String', '0' ...
        );
    
    % Clear Q2 entry fields
    qClearBtn2 = uicontrol;
    set(qClearBtn2,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [23.5 pHeight-1.45 3 1], ...
        'String', 'Clear', ...
        'FontSize', btnFontSize ,...
        'Callback', @clearBtn_Callback ...
        );
    
    % Button to display quaternion addition
    qPlusBtn = uicontrol;
    set(qPlusBtn,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [pWidth/2-9 .75 3 1], ...
        'String', 'Q1 + Q2', ...
        'FontSize', btnFontSize ,...
        'Callback', @plusBtn_Callback ...
        );
    
    % Button to display quaternion subtraction
    qMinusBtn = uicontrol;
    set(qMinusBtn,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [pWidth/2-4 .75 3 1], ...
        'String', 'Q1 - Q2', ...
        'FontSize', btnFontSize ,...
        'Callback', @minusBtn_Callback ...
        );
    
    % Button to display quaternion multiplication
    qTimesBtn = uicontrol;
    set(qTimesBtn,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [pWidth/2+1 .75 3 1], ...
        'String', 'Q1 x Q2', ...
        'FontSize', btnFontSize ,...
        'Callback', @timesBtn_Callback ...
        );
    
    % Button to display quaternion division
    qDivideBtn = uicontrol;
    set(qDivideBtn,...
        'Parent', qPanel2,...
        'Units', 'centimeters',...
        'Position', [pWidth/2+6 .75 3 1], ...
        'String', 'Q1 / Q2', ...
        'FontSize', btnFontSize ,...
        'Callback', @divideBtn_Callback ...
        );
    
    % Quaternion2 +/- text
    axes(qTextAxes2);
    text(6, qStrBottom, '$  + $','FontSize', 16, 'Interpreter', 'latex');
    text(10.8, qStrBottom, '$i \quad +$','FontSize', 16, 'Interpreter', 'latex');
    text(16.2, qStrBottom, '$j \quad +$','FontSize', 16, 'Interpreter', 'latex');
    text(21.7, qStrBottom, '$k$','FontSize', 16, 'Interpreter', 'latex');
    
    % Lower textbox for arithmetic results
    statsText = annotation('textbox',... 
        'Units', 'centimeters',...
        'Position', [.2 8.25 pWidth pHeight-.25],...
        'HorizontalAlignment', 'center',...
        'VerticalAlignment', 'middle',...
        'LineStyle', 'none' ,...
        'FontSize', 18,...
        'String', ' ',...
        'Interpreter', 'latex' ...
        );
    
    % Lower textbox for arithmetic results
    resultText = annotation('textbox',... 
        'Units', 'centimeters',...
        'Position', [.2 0.2 pWidth pHeight-1],...
        'HorizontalAlignment', 'center',...
        'VerticalAlignment', 'middle',...
        'LineStyle', 'none' ,...
        'FontSize', 18,...
        'String', ' ',...
        'Interpreter', 'latex' ...
        );
    
    quatEdit_Callback(hFig);
 
    % -------------------------- %
    % --- Callback Functions --- %
    % -------------------------- %
    
    % Update Quaternion stats when edited
    function quatEdit_Callback(source, ~)
        q = getQ1();
        qcon = q.conjugate();
        qnorm = q.norm();
        qn = q.normalize();
        
        q1str = getResultString('Q1', q);
        qcstr = getResultString('\bar{Q1}', qcon);
        qnstr = getResultString('\hat{Q1}', qn);
        
        str1 = sprintf('%s $\\qquad$ %s',q1str, qcstr);
        str2 = sprintf('$\\qquad \\qquad \\qquad |Q1| = %.2f \\qquad $ %s', qnorm, qnstr);
        
        s = {str1, '', '', str2};
        statsText.String = s;
        
    end

    % Clear button pressed
    function clearBtn_Callback(source, ~)
        if source == qClearBtn1
            qW1.String = '0';
            qX1.String = '0';
            qY1.String = '0';
            qZ1.String = '0';
        else
            qW2.String = '0';
            qX2.String = '0';
            qY2.String = '0';
            qZ2.String = '0';
            resultText.String = '';
        end
        quatEdit_Callback(source);
    end
    
    % Perform addition
    function plusBtn_Callback(source, ~)
        q1 = getQ1();
        q2 = getQ2();
        
        q3 = q1.plus(q2);
        
        resultText.String = getResultString('Q1 + Q2', q3);
    end

    % Perform subtraction
    function minusBtn_Callback(source, ~)
        q1 = getQ1();
        q2 = getQ2();
        
        q3 = q1.minus(q2);
        
        resultText.String = getResultString('Q1 - Q2', q3);
        
    end

    % Perform multiplication
    function timesBtn_Callback(source, ~)
        q1 = getQ1();
        q2 = getQ2();
        
        q3 = q1.times(q2);
        
        resultText.String = getResultString('Q1 \otimes Q2', q3);
    end

    % Perform division
    function divideBtn_Callback(source, ~)
        q1 = getQ1();
        q2 = getQ2();
        
        q3 = q1.divide(q2);
       
        resultText.String = getResultString('Q1 / Q2', q3);
    end

    function axisAngle_Callback(source, ~)
        q = getQ1();
        s = getResultString('Q', q);
        AxisAngleGUI(q, s);
    end
    
    function rotMatrix_Callback(source, ~)
        q = getQ1();
        s = getResultString('Q', q);
        RotMatrixGUI(q, s);
    end

    function euler_Callback(source, ~)
        q = getQ1();
        s = getResultString('Q', q);
        EulerGUI(q, s);
    end

    % ------------------------ %
    % --- Helper Functions --- %
    % ------------------------ %

    function Q = getQ1
       w = str2double(get(qW1, 'String'));
       if isnan(w), w = 0; qW1.String = '0'; end
       x = str2double(get(qX1, 'String'));
       if isnan(x), x = 0; qX1.String = '0'; end
       y = str2double(get(qY1, 'String'));
       if isnan(y), y = 0; qY1.String = '0'; end
       z = str2double(get(qZ1, 'String'));
       if isnan(z), z = 0; qZ1.String = '0'; end

       Q = MyQuaternion(w, [x y z]);
    end

    function Q = getQ2
       w = str2double(get(qW2, 'String'));
       if isnan(w), w = 0; qW2.String = '0'; end
       x = str2double(get(qX2, 'String'));
       if isnan(x), x = 0; qX2.String = '0'; end
       y = str2double(get(qY2, 'String'));
       if isnan(y), y = 0; qY2.String = '0'; end
       z = str2double(get(qZ2, 'String'));
       if isnan(z), z = 0; qZ2.String = '0'; end

       Q = MyQuaternion(w, [x y z]);
    end
    
    
end

function str = getResultString(s, q)
%% getResultString returns latex formatted quaternion string
%
% str = getResultString(s, q) returns a complex 4-dimensional unit vector 
% string representation of a quaternion (q). 
%

    signs = [];
    for j = 1:3
        if q.v(j) < 0
            q.v(j) = q.v(j) * -1;
            signs(j) = '-';
        else
            signs(j) = '+';
        end
        
        if q.v(j) == 0, q.v(j) = abs(q.v(j)); end
    end
    
    if q.s == 0, q.s = abs(q.s); end
    
    ss = '$%s = %.2f %c %.2f i %c %.2f j %c %.2f k$';
    str = sprintf(ss, s, q.s, signs(1), q.v(1), signs(2), q.v(2), signs(3), q.v(3));
end



